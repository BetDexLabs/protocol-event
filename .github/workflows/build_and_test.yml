name: CI - Build Protocol Event Program

on:
  pull_request:
    types: [ opened, reopened, synchronize, ready_for_review ]
    paths:
      - 'programs/protocol_event/**'
      - 'tests/**'
      - 'Cargo.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: self-hosted

    env:
      SOLANA_VERSION: ${{ vars.ORG_SOLANA_VERSION }}
      SOLANA_PATH: /home/runner/.local/share/solana/install/active_release/bin
      PROGRAM: protocol_event

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Solana Cache
        id: cache-solana
        uses: actions/cache@v2
        with:
          path: /home/runner/.local/share/solana/
          key: ${{ runner.os }}-solana-${{ env.SOLANA_VERSION }}

      - name: Yarn Cache
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'

      - name: Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.cargo/bin/
            /home/runner/.cargo/registry/index/
            /home/runner/.cargo/registry/cache/
            /home/runner/.cargo/git/db/
            /home/runner/.cargo/.crates.toml
            /home/runner/.cargo/.crates2.json
            target/bpfel-unknown-unknown/
            target/debug/
            target/release/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          rustup default stable
          SOLANA_INSTALLER_URL=https://release.solana.com/${{ env.SOLANA_VERSION }}/install
          echo $SOLANA_INSTALLER_URL
          sh -c "$(curl -sSfL $SOLANA_INSTALLER_URL)"

      - name: Set Solana Path
        run: |
          echo "${{ env.SOLANA_PATH }}" >> $GITHUB_PATH

      - name: Check Solana Version
        run: |
          solana --version

      - name: Install anchor
        run: |
          sudo apt update
          sudo apt install -y libudev-dev
          sudo apt install -y pkg-config
          ANCHOR_VERSION=`grep -A1 'name = "anchor-lang"' Cargo.lock | tail -n 1 | cut -d = -f 2 | xargs`
          echo "Installing anchor-cli version ${ANCHOR_VERSION}"
          cargo install --git https://github.com/project-serum/anchor --tag v${ANCHOR_VERSION} anchor-cli --locked
          anchor --version

      - name: Anchor build & test
        run: |
          set -o pipefail
          solana-keygen new --no-bip39-passphrase --force
          yarn
          yarn test
